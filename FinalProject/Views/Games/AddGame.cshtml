@model FinalProject.Models.Game

@{
    ViewData["Title"] = "Add Game";
}

<h2>Add New Game</h2>

<form asp-action="AddGame" method="post">
    <div class="form-group">
        <label asp-for="Title"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Genre"></label>
        <input asp-for="Genre" class="form-control" />
        <span asp-validation-for="Genre" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ReleaseDate"></label>
        <input asp-for="ReleaseDate" class="form-control" />
        <span asp-validation-for="ReleaseDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Add Game</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}




@* <h2>Add New Game</h2>

@using (Html.BeginForm("AddGame", "Games", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div>
        @Html.LabelFor(m => m.Title)
        @Html.TextBoxFor(m => m.Title)
        @Html.ValidationMessageFor(m => m.Title)
    </div>
    <!-- Repeat for other fields like Genre, Image, ReleaseDate, Description -->

    <button type="submit">Add Game</button>
} *@
